TAP version 13
1..32
ok 1 - clojure_good_1.clj
ok 2 - coffeescript_good_1.coffee
ok 3 - csharp_good_01.cs
ok 4 - css_good_01.css
ok 5 - dart_good_1.dart
ok 6 - gherkin_good_01.feature
ok 7 - golang_good_01.go
ok 8 - Dockerfile
ok 9 - Dockerfile.dev
ok 10 - groovy_good_01.groovy
ok 11 - html_good_01.html
ok 12 - java_good_1.java
not ok 13 - javascript_bad_1.js
  ---
  message: Clone found (javascript) \n - /tmp/lint/.automation/test/jscpd/javascript_bad_1.js [119 5 - 126 20] (7 lines, 82 tokens)\n   /tmp/lint/.automation/test/jscpd/javascript_bad_1.js [66 5 - 73 18]\n\nClone found (javascript) \n - /tmp/lint/.automation/test/jscpd/javascript_bad_1.js [190 43 - 204 17] (14 lines, 145 tokens)\n   /tmp/lint/.automation/test/jscpd/javascript_bad_1.js [61 43 - 75 11]\n\nClone found (javascript) \n - /tmp/lint/.automation/test/jscpd/javascript_bad_1.js [119 5 - 126 20] (7 lines, 82 tokens)\n   /tmp/lint/.automation/test/jscpd/javascript_bad_1.js [66 5 - 73 18]\n\n 119 │ 66 │ }                                               \n 120 │ 67 │   }                                             \n 121 │ 68 │   let body = []                                 \n 122 │ 69 │   const req = https.request(options, (res) => { \n 123 │ 70 │     res.on('data', (chunk) => {                 \n 124 │ 71 │       body.push(chunk)                          \n 125 │ 72 │     }).on('end', () => {                        \n 126 │ 73 │       body = Buffer                             \n\nClone found (javascript) \n - /tmp/lint/.automation/test/jscpd/javascript_bad_1.js [190 43 - 204 17] (14 lines, 145 tokens)\n   /tmp/lint/.automation/test/jscpd/javascript_bad_1.js [61 43 - 75 11]\n\n 190 │ 61 │ ,                                                        \n 191 │ 62 │     method  'GET',                                       \n 192 │ 63 │     headers  {                                           \n 193 │ 64 │       Authorization  'token ' + (process.env.GHE_TOKEN), \n 194 │ 65 │       'Content-Type'  'application/json'                 \n 195 │ 66 │     }                                                    \n 196 │ 67 │   }                                                      \n 197 │ 68 │   let body = []                                          \n 198 │ 69 │   const req = https.request(options, (res) => {          \n 199 │ 70 │     res.on('data', (chunk) => {                          \n 200 │ 71 │       body.push(chunk)                                   \n 201 │ 72 │     }).on('end', () => {                                 \n 202 │ 73 │       body = JSON.parse(Buffer.concat(body))             \n 203 │ 74 │       body.forEach(item => {                             \n 204 │ 75 │         orgRepos                                         \n\nFound 2 clones.\nERROR  jscpd found too many duplicates (9.81%) over threshold (0%)\nError  ERROR  jscpd found too many duplicates (9.81%) over threshold (0%)\n    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js)\n    at /node_modules/@jscpd/finder/dist/in-files-detector.js\n    at Array.forEach (<anonymous>)\n    at /node_modules/@jscpd/finder/dist/in-files-detector.js\n    at processTicksAndRejections (node internal/process/task_queues 93 5)\n
  ...
ok 14 - json_good_1.json
ok 15 - kotlint_good_1.kt
ok 16 - latex_good_1.tex
ok 17 - lua_good_1.lua
ok 18 - markdown_good_1.md
ok 19 - perl_good_1.pl
ok 20 - php_good_1.php
ok 21 - powershell_good_1.ps1
ok 22 - protobuf_good_1.proto
not ok 23 - python_bad_1.py
  ---
  message: Clone found (python) \n - /tmp/lint/.automation/test/jscpd/python_bad_1.py [77 70 - 84 16] (7 lines, 77 tokens)\n   /tmp/lint/.automation/test/jscpd/python_bad_1.py [50 69 - 55 82]\n\nClone found (python) \n - /tmp/lint/.automation/test/jscpd/python_bad_1.py [77 70 - 84 16] (7 lines, 77 tokens)\n   /tmp/lint/.automation/test/jscpd/python_bad_1.py [50 69 - 55 82]\n\n 77 │ 50 │ ), "r"                                                                           \n 78 │ 51 │     ) as query_file                                                              \n 79 │ 52 │         query = "".join(query_file.readlines())                                  \n 80 │ 53 │                                                                                  \n 81 │ 54 │     payload = {"query"  query, "variables"  query_variables}                     \n 82 │ 55 │     response = requests.post(api_url, data=json.dumps(payload), headers=headers) \n 83 │ 56 │                                                                                  \n 84 │ 57 │     status_code                                                                  \n\nFound 1 clones.\nERROR  jscpd found too many duplicates (3.61%) over threshold (0%)\nError  ERROR  jscpd found too many duplicates (3.61%) over threshold (0%)\n    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js)\n    at /node_modules/@jscpd/finder/dist/in-files-detector.js\n    at Array.forEach (<anonymous>)\n    at /node_modules/@jscpd/finder/dist/in-files-detector.js\n    at processTicksAndRejections (node internal/process/task_queues 93 5)\n
  ...
ok 24 - r_good_1.r
ok 25 - expected-JSCPD.tap
ok 26 - ruby_good_1.rb
ok 27 - shell_good_1.sh
ok 28 - sql_good_1.sql
ok 29 - typescript_good_1 copy.ts
ok 30 - typescript_good_1.ts
ok 31 - xml_good_1.xml
ok 32 - yml_good_1.yml
